apiVersion: v1
kind: ConfigMap
metadata:
  name: service2-config
data:
  envoy.yaml: |
    static_resources:
      listeners:
      - address:
          socket_address:
            address: 0.0.0.0
            port_value: 8000
        traffic_direction: INBOUND
        filter_chains:
        - filters:
          - name: envoy.filters.network.http_connection_manager
            typed_config:
              "@type": type.googleapis.com/envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager
              tracing:
                verbose: true
                custom_tags:
                - tag: session-id
                  request_header:
                    name: "session-id"
                    default_value: "missing"
                - tag: trace-id
                  request_header:
                    name: "X-B3-TraceId"
                    default_value: "missing"
                - tag: correlation-id
                  request_header: 
                    name: "correlation-id"
                    default_value: "missing"
                provider:
                  name: envoy.tracers.zipkin
                  typed_config:
                    "@type": type.googleapis.com/envoy.config.trace.v3.ZipkinConfig
                    collector_cluster: jaeger
                    collector_endpoint: "/api/v2/spans"
                    shared_span_context: false
                    collector_endpoint_version: HTTP_JSON
              codec_type: auto
              stat_prefix: ingress_http
              route_config:
                  name: local_route
                  virtual_hosts:
                  - name: service2
                    domains:
                    - "*"
                    routes:
                    - match:
                        prefix: "/"
                      route:
                        cluster: local_service
              http_filters:
              - name: envoy.filters.http.tap
                typed_config:
                  "@type": type.googleapis.com/envoy.extensions.filters.http.tap.v3.Tap
                  common_config:
                    static_config:
                      match_config:
                        any_match: true
                      output_config:
                        sinks:
                          - file_per_tap:
                              path_prefix: /tmp/any/
              - name: envoy.filters.http.router
                typed_config:
                  "@type": type.googleapis.com/envoy.extensions.filters.http.router.v3.Router
              access_log:
              - name: envoy.access_loggers.file
                typed_config:
                  "@type": type.googleapis.com/envoy.extensions.access_loggers.file.v3.FileAccessLog
                  path: "/dev/stdout"
                  typed_json_format: 
                    "@timestamp": "%START_TIME%"
                    envoy:
                      route:
                        name: "%ROUTE_NAME%"
                      upstream:
                        cluster: "%UPSTREAM_CLUSTER%"
                        localaddress: "%UPSTREAM_LOCAL_ADDRESS%"
                        transport_failure_reason: "%UPSTREAM_TRANSPORT_FAILURE_REASON%"
                    host:
                      hostname: "%HOSTNAME%"
                    http:
                      request:
                        body:
                          bytes: "%BYTES_RECEIVED%"
                        duration: "%DURATION%"
                        duration_req: "%REQUEST_DURATION%"
                        headers:
                          accept: "%REQ(ACCEPT)%"
                          authority: "%REQ(:AUTHORITY)%"
                          content-length: "%REQ(CONTENT-LENGTH)%"
                          content-type: "%REQ(CONTENT-TYPE)%"
                          host: "%REQ(HOST)%"
                          id: "%REQ(X-REQUEST-ID)%"
                          session-id: "%REQ(SESSION-ID)%"
                          correlation-id: "%REQ(CORRELATION-ID)%"
                          x_forwarded_for: "%REQ(X-FORWARDED-FOR)%"
                          x_forwarded_proto: "%REQ(X-FORWARDED-PROTO)%"
                          x_envoy_internal: "%REQ(X-ENVOY-INTERNAL)%"
                          x_envoy_decorator_operation: "%REQ(X-ENVOY-DECORATOR-OPERATION)%"
                          x_envoy_expected_rq_timeout_ms: "%REQ(X-ENVOY-EXPECTED-RQ-TIMEOUT-MS)%"
                          x_b3_traceid: "%REQ(X-B3-TRACEID)%"
                          x_b3_parentspanid: "%REQ(X-B3-PARENTSPANID)%"
                          x_b3_spanid: "%REQ(X-B3-SPANID)%"
                          x_b3_sampled: "%REQ(X-B3-SAMPLED)%"
                        method: "%REQ(:METHOD)%"
                        path: "%REQ(X-ENVOY-ORIGINAL-PATH?:PATH)%"
                      response:
                        body:
                          bytes: "%BYTES_SENT%"
                        duration_resp: "%RESPONSE_DURATION%"
                        duration_tx: "%RESPONSE_TX_DURATION%"
                        flags: "%RESPONSE_FLAGS%"
                        headers:
                          access-control-allow-origin: "%RESP(ACCESS-CONTROL-ALLOW-ORIGIN)%"
                          content-length: "%RESP(CONTENT-LENGTH)%"
                          content-type: "%RESP(CONTENT-TYPE)%"
                          date: "%RESP(DATE)%"
                          server: "%RESP(SERVER)%"
                        status_code: "%RESPONSE_CODE%"
                        status_code_details: "%RESPONSE_CODE_DETAILS%"
                      version: "%PROTOCOL%"
                    log:
                      level: "info"  # default envoy log level
                    network:
                      direction: "inbound"
                    server:
                      address: "%UPSTREAM_HOST%"
                    service:
                      name: "envoy"
                      version: "1.20"
                    user_agent.name: "%REQ(USER-AGENT)%"
      clusters:
      - name: local_service
        connect_timeout: 0.25s
        type: STRICT_DNS
        lb_policy: ROUND_ROBIN
        load_assignment:
          cluster_name: local_service
          endpoints:
          - lb_endpoints:
            - endpoint:
                address:
                  socket_address:
                    address: 127.0.0.1
                    port_value: 5000
      - name: jaeger
        connect_timeout: 1s
        type: STRICT_DNS
        lb_policy: ROUND_ROBIN
        load_assignment:
          cluster_name: jaeger
          endpoints:
          - lb_endpoints:
            - endpoint:
                address:
                  socket_address:
                    address: jaeger-collector
                    port_value: 9411
    admin:
      access_log_path: "/dev/null"
      address:
        socket_address:
          address: 0.0.0.0
          port_value: 8081
